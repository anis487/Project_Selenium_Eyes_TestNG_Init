<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="LAPTOP-0UVUABNA" failures="0" tests="0" name="ChromeTest" time="0.079" errors="0" timestamp="2 Mar 2022 20:53:49 GMT">
  <testcase classname="Com.Cristal.Runner.TestRunner" name="@BeforeClass setUpClass" time="0.0">
    <failure type="java.lang.IllegalArgumentException" message="The plugin specification &amp;apos;com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter:&amp;apos; has a problem:

Could not load plugin class &amp;apos;com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter&amp;apos;.

Plugin specifications should have the format of PLUGIN[:[PATH|[URI [OPTIONS]]]

Valid values for PLUGIN are: default_summary, html, json, junit, message, null_summary, pretty, progress, rerun, summary, teamcity, testng, timeline, unused, usage

PLUGIN can also be a fully qualified class name, allowing registration of 3rd party plugins. The 3rd party plugin must implement io.cucumber.plugin.Plugin">
      <![CDATA[java.lang.IllegalArgumentException: The plugin specification 'com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter:' has a problem:

Could not load plugin class 'com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter'.

Plugin specifications should have the format of PLUGIN[:[PATH|[URI [OPTIONS]]]

Valid values for PLUGIN are: default_summary, html, json, junit, message, null_summary, pretty, progress, rerun, summary, teamcity, testng, timeline, unused, usage

PLUGIN can also be a fully qualified class name, allowing registration of 3rd party plugins. The 3rd party plugin must implement io.cucumber.plugin.Plugin
	at io.cucumber.core.options.PluginOption.createCouldNotLoadClass(PluginOption.java:167)
	at io.cucumber.core.options.PluginOption.parsePluginName(PluginOption.java:145)
	at io.cucumber.core.options.PluginOption.parse(PluginOption.java:104)
	at io.cucumber.core.options.RuntimeOptionsBuilder.addPluginName(RuntimeOptionsBuilder.java:68)
	at io.cucumber.core.options.CucumberOptionsAnnotationParser.addPlugins(CucumberOptionsAnnotationParser.java:87)
	at io.cucumber.core.options.CucumberOptionsAnnotationParser.parse(CucumberOptionsAnnotationParser.java:41)
	at io.cucumber.testng.TestNGCucumberRunner.<init>(TestNGCucumberRunner.java:73)
	at io.cucumber.testng.AbstractTestNGCucumberTests.setUpClass(AbstractTestNGCucumberTests.java:23)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.ClassNotFoundException: com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at io.cucumber.core.options.PluginOption.parsePluginName(PluginOption.java:139)
	... 26 more
... Removed 16 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setUpClass -->
  <testcase classname="Com.Cristal.Runner.TestRunner" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="Com.Cristal.Runner.TestRunner" name="@AfterClass takeScreenshot" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at Com.Cristal.Runner.TestRunner.takeScreenshot(TestRunner.java:140)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
... Removed 16 stack frames]]>
    </failure>
  </testcase> <!-- @AfterClass takeScreenshot -->
</testsuite> <!-- ChromeTest -->
